[{"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/index.js":"1","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/App.js":"2","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/pages/SearchBooks.js":"3","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/pages/SavedBooks.js":"4","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/components/Navbar.js":"5","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/components/SignupForm.js":"6","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/components/LoginForm.js":"7","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/localStorage.js":"8","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/mutations.js":"9","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/auth.js":"10","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/queries.js":"11","/Users/collinporter/code/sandbox/google-books-search/client/src/index.js":"12","/Users/collinporter/code/sandbox/google-books-search/client/src/App.js":"13","/Users/collinporter/code/sandbox/google-books-search/client/src/pages/SavedBooks.js":"14","/Users/collinporter/code/sandbox/google-books-search/client/src/components/Navbar.js":"15","/Users/collinporter/code/sandbox/google-books-search/client/src/pages/SearchBooks.js":"16","/Users/collinporter/code/sandbox/google-books-search/client/src/components/SignupForm.js":"17","/Users/collinporter/code/sandbox/google-books-search/client/src/components/LoginForm.js":"18","/Users/collinporter/code/sandbox/google-books-search/client/src/utils/auth.js":"19","/Users/collinporter/code/sandbox/google-books-search/client/src/utils/localStorage.js":"20","/Users/collinporter/code/sandbox/google-books-search/client/src/utils/queries.js":"21","/Users/collinporter/code/sandbox/google-books-search/client/src/utils/mutations.js":"22"},{"size":266,"mtime":1654882083661,"results":"23","hashOfConfig":"24"},{"size":1725,"mtime":1654882083660,"results":"25","hashOfConfig":"24"},{"size":5061,"mtime":1674247538343,"results":"26","hashOfConfig":"24"},{"size":2555,"mtime":1654882083661,"results":"27","hashOfConfig":"24"},{"size":2524,"mtime":1654882083660,"results":"28","hashOfConfig":"24"},{"size":3617,"mtime":1654882083660,"results":"29","hashOfConfig":"24"},{"size":2784,"mtime":1654882083660,"results":"30","hashOfConfig":"24"},{"size":793,"mtime":1654882083661,"results":"31","hashOfConfig":"24"},{"size":1058,"mtime":1654882083661,"results":"32","hashOfConfig":"24"},{"size":1234,"mtime":1654882083661,"results":"33","hashOfConfig":"24"},{"size":250,"mtime":1654882083662,"results":"34","hashOfConfig":"24"},{"size":266,"mtime":1674247931129,"results":"35","hashOfConfig":"36"},{"size":1725,"mtime":1674247931122,"results":"37","hashOfConfig":"36"},{"size":2555,"mtime":1674247931131,"results":"38","hashOfConfig":"36"},{"size":2524,"mtime":1674247931124,"results":"39","hashOfConfig":"36"},{"size":5061,"mtime":1674247931132,"results":"40","hashOfConfig":"36"},{"size":3617,"mtime":1674247931125,"results":"41","hashOfConfig":"36"},{"size":2784,"mtime":1674247931123,"results":"42","hashOfConfig":"36"},{"size":1234,"mtime":1674247931133,"results":"43","hashOfConfig":"36"},{"size":793,"mtime":1674247931135,"results":"44","hashOfConfig":"36"},{"size":250,"mtime":1674247931136,"results":"45","hashOfConfig":"36"},{"size":1058,"mtime":1674247931135,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1xkhda",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1igtnl0",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/index.js",[],["95","96"],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/App.js",[],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/pages/SearchBooks.js",["97","98"],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/pages/SavedBooks.js",["99","100"],"import React from 'react';\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from 'react-bootstrap';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\n\nimport Auth from '../utils/auth';\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing {userData.username}'s books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks?.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? 'book' : 'books'\n              }:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks?.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/components/Navbar.js",[],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/components/SignupForm.js",[],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/components/LoginForm.js",[],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/localStorage.js",[],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/mutations.js",[],"/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/auth.js",["101"],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","/Users/collinporter/code/2U-Coding-Bootcamp/fullstack-blended/01-Class-Content/21-MERN/02-Challenge/Main/client/src/utils/queries.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/index.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/App.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/pages/SavedBooks.js",["102","103"],"/Users/collinporter/code/sandbox/google-books-search/client/src/components/Navbar.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/pages/SearchBooks.js",["104","105"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\n\nimport Auth from \"../utils/auth\";\n\nconst SearchBooks = () => {\n  const cardTextStyle = {\n    display: \"-webkit-box\",\n    overflow: \"hidden\",\n    webkitLineClamp: \"3\",\n    webkitBoxOrient: \"vertical\",\n  };\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${searchInput}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: { bookData: { ...bookToSave } },\n      });\n      console.log(savedBookIds);\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text style={cardTextStyle}>\n                    {book.description}\n                  </Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedId) => savedId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some((savedId) => savedId === book.bookId)\n                        ? \"Book Already Saved!\"\n                        : \"Save This Book!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","/Users/collinporter/code/sandbox/google-books-search/client/src/components/SignupForm.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/components/LoginForm.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/utils/auth.js",["106"],"/Users/collinporter/code/sandbox/google-books-search/client/src/utils/localStorage.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/utils/queries.js",[],"/Users/collinporter/code/sandbox/google-books-search/client/src/utils/mutations.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":33,"column":22,"nodeType":"113","messageId":"114","endLine":33,"endColumn":27},{"ruleId":"111","severity":1,"message":"115","line":88,"column":15,"nodeType":"113","messageId":"114","endLine":88,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":19,"column":24,"nodeType":"113","messageId":"114","endLine":19,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":33,"column":15,"nodeType":"113","messageId":"114","endLine":33,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":49,"column":1,"nodeType":"118","endLine":49,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":19,"column":24,"nodeType":"113","messageId":"114","endLine":19,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":33,"column":15,"nodeType":"113","messageId":"114","endLine":33,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":33,"column":22,"nodeType":"113","messageId":"114","endLine":33,"endColumn":27},{"ruleId":"111","severity":1,"message":"115","line":88,"column":15,"nodeType":"113","messageId":"114","endLine":88,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":49,"column":1,"nodeType":"118","endLine":49,"endColumn":34},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]